@model Mhotivo.Models.NotificationRegisterModel
@{
    ViewBag.Title = "Notificaciones";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
<script src="~/Scripts/jquery.hotkeys.min.js"></script>
<script src="~/Scripts/bootstrap-tagsinput.min.js"></script>
<link href="~/Content/bootstrap-tagsinput.css" rel="stylesheet" />
<script src="~/Scripts/typeahead.js"></script>

<link href="~/Content/summernote.css" rel="stylesheet" />
<link href="~/Content/summernote-bs3.css" rel="stylesheet" />
<script src="~/Scripts/summernote.min.js"></script>

<script src="~/Scripts/jquery.validate.js"></script>
<script src="~/Scripts/jquery.unobtrusive-ajax.js"></script>




@using (Html.BeginForm("Add", "Notification", FormMethod.Post, new { id = "Form", @class = "form-horizontal" }))
{
    @Html.ValidationSummary(true)

    <p class="text-error">
        @Html.ValidationMessageFor(model => model.Title)
        @Html.ValidationMessageFor(model => model.Message)
        @Html.ValidationMessageFor(model => model.NotificationType)
    </p>
    <div class="control-group">
        <div class="control-label">
            @Html.LabelFor(model => model.NotificationType)
        </div>
        <div class="controls">
            @Html.DropDownList("NotificationType", (List<SelectListItem>)ViewBag.NotificationTypes)
        </div>
    </div>
    
    <div class="control-group">
        <div class="control-label">
            @Html.LabelFor(model => model.Title)
        </div>
        <div class="controls">
            @Html.EditorFor(model => model.Title)
        </div>
    </div>
    <div class="control-group" id="Id1List" style="display:none">
        <div class="control-label">
            @Html.Label("Seleccione:")
        </div>
        <div class="controls">
            @Html.DropDownList("Id1", (List<SelectListItem>)ViewBag.List1)
        </div>
    </div>
    <div class="control-group" id="Id2List" style="display:none">
        <div class="control-label">
            @Html.Label("Seleccione:")
        </div>
        <div class="controls">
            @Html.DropDownList("Id2", (List<SelectListItem>)ViewBag.List2)
        </div>
    </div>
    <div class="control-group" id="DestinationIdList" style="display:none">
        <div class="control-label">
            @Html.Label("Seleccione:")
        </div>
        <div class="controls">
            @Html.DropDownList("DestinationId", (List<SelectListItem>)ViewBag.DestinationList)
        </div>
    </div>

    <div class="control-group">
        <div class="control-label">
            @Html.LabelFor(model => model.SendEmail)
        </div>
        <div class="controls">
            @Html.CheckBoxFor(model => model.SendEmail)
        </div>
    </div>
    @*<div class="control-group">
        <div class="control-label">
            @Html.LabelFor(model => model.Message)
        </div>
        <div class="controls">
            @Html.TextAreaFor(model => model.Message, new { style = "width: 600px; height: 150px;" })
        </div>
    </div>*@
    <div id="htmlMessage"></div> 
    @Html.HiddenFor(model => model.Message)
        
    <div class="space"></div>
    <div class="space"></div>
    <div class="modal-footer">
        @Html.ActionLink("Cancelar", "Index", "Notification", null, new { @class = "btn btn-small icon-remove" })
        <button type="submit" class="btn btn-small btn-primary">
            <i class="icon-ok"></i>
            Crear
        </button>
    </div>
}
<script type="text/javascript">
    
    $(document).ready(function () {
        $('#htmlMessage').summernote();
    });

    $("#Form").submit(function (event) {
        var sHTML = $('#htmlMessage').code();
        $('#Message').val(sHTML);
       // alert("Handler for .submit() called. : <br />" + $('#Message').val());
        //event.preventDefault();
    });
</script>
<script type="text/javascript">
    function updateSelectLists() {
        $.ajax({
            url: '@Url.Action("LoadFromNotificationTypeList")',
            cache: false,
            type: 'POST',
            data: $('form').serialize(),
            datatype: "json",
            success: function (data) {
                var e = document.getElementById('NotificationType');
                var ntype = parseInt(e.options[e.selectedIndex].value);
                //use Mhotivo/Data/Notification/NotificationType enum values
                switch (ntype) {
                    case 1:
                        $('#Id1List').hide();
                        $('#Id2List').hide();
                        $('#DestinationIdList').hide();
                        break;
                    case 2:
                        $('#Id1List').hide();
                        $('#Id2List').hide();
                        $('#DestinationIdList').show();
                        $('#DestinationId').empty();
                        $.each($(data.EducationLevels), function (i, optionavailable) {
                            $('#DestinationId').append("<option value='" + optionavailable.Value + "'>" + optionavailable.Text + "</option>");
                        });
                        break;
                    case 3:
                        $('#Id1List').hide();
                        $('#Id2List').hide();
                        $('#DestinationIdList').show();
                        $('#DestinationId').empty();
                        $.each($(data.Grades), function (i, optionavailable) {
                            $('#DestinationId').append("<option value='" + optionavailable.Value + "'>" + optionavailable.Text + "</option>");
                        });
                        break;
                    case 4:
                        $('#Id1List').show();
                        $('#Id2List').hide();
                        $('#DestinationIdList').show();
                        $('#Id1').empty();
                        $.each($(data.Grades), function (i, optionavailable) {
                            $('#Id1').append("<option value='" + optionavailable.Value + "'>" + optionavailable.Text + "</option>");
                        });
                        $('#DestinationId').empty();
                        $.each($(data.AcademicGrades), function (i, optionavailable) {
                            $('#DestinationId').append("<option value='" + optionavailable.Value + "'>" + optionavailable.Text + "</option>");
                        });
                        break;
                    case 5:
                        $('#Id1List').show();
                        $('#Id2List').show();
                        $('#DestinationIdList').show();
                        $('#Id1').empty();
                        $.each($(data.Grades), function (i, optionavailable) {
                            $('#Id1').append("<option value='" + optionavailable.Value + "'>" + optionavailable.Text + "</option>");
                        });
                        $('#Id2').empty();
                        $.each($(data.AcademicGrades), function (i, optionavailable) {
                            $('#Id2').append("<option value='" + optionavailable.Value + "'>" + optionavailable.Text + "</option>");
                        });
                        $('#DestinationId').empty();
                        $.each($(data.AcademicCourses), function (i, optionavailable) {
                            $('#DestinationId').append("<option value='" + optionavailable.Value + "'>" + optionavailable.Text + "</option>");
                        });
                        break;
                    case 6:
                        $('#Id1List').show();
                        $('#Id2List').show();
                        $('#DestinationIdList').show();
                        $('#Id1').empty();
                        $.each($(data.Grades), function (i, optionavailable) {
                            $('#Id1').append("<option value='" + optionavailable.Value + "'>" + optionavailable.Text + "</option>");
                        });
                        $('#Id2').empty();
                        $.each($(data.AcademicGrades), function (i, optionavailable) {
                            $('#Id2').append("<option value='" + optionavailable.Value + "'>" + optionavailable.Text + "</option>");
                        });
                        $('#DestinationId').empty();
                        $.each($(data.Personals), function (i, optionavailable) {
                            $('#DestinationId').append("<option value='" + optionavailable.Value + "'>" + optionavailable.Text + "</option>");
                        });
                        break;
                    default:
                        break;
                }
            }
        });
    }
    function updateFromId1() {
        $.ajax({
            url: '@Url.Action("LoadFromList1")',
            cache: false,
            type: 'POST',
            data: $('form').serialize(),
            datatype: "json",
            success: function (data) {
                var e = document.getElementById('NotificationType');
                var ntype = parseInt(e.options[e.selectedIndex].value);
                //use Mhotivo/Data/Notification/NotificationType enum values
                switch (ntype) {
                    case 4:
                        $('#DestinationId').empty();
                        $.each($(data.AcademicGrades), function (i, optionavailable) {
                            $('#DestinationId').append("<option value='" + optionavailable.Value + "'>" + optionavailable.Text + "</option>");
                        });
                        break;
                    case 5:
                        $('#Id2').empty();
                        $.each($(data.AcademicGrades), function (i, optionavailable) {
                            $('#Id2').append("<option value='" + optionavailable.Value + "'>" + optionavailable.Text + "</option>");
                        });
                        $('#DestinationId').empty();
                        $.each($(data.AcademicCourses), function (i, optionavailable) {
                            $('#DestinationId').append("<option value='" + optionavailable.Value + "'>" + optionavailable.Text + "</option>");
                        });
                        break;
                    case 6:
                        $('#Id2').empty();
                        $.each($(data.AcademicGrades), function (i, optionavailable) {
                            $('#Id2').append("<option value='" + optionavailable.Value + "'>" + optionavailable.Text + "</option>");
                        });
                        $('#DestinationId').empty();
                        $.each($(data.Personals), function (i, optionavailable) {
                            $('#DestinationId').append("<option value='" + optionavailable.Value + "'>" + optionavailable.Text + "</option>");
                        });
                        break;
                    default:
                        break;
                }
            }
        });
    }
    function updateFromId2() {
        $.ajax({
            url: '@Url.Action("LoadFromList2")',
            cache: false,
            type: 'POST',
            data: $('form').serialize(),
            datatype: "json",
            success: function (data) {
                var e = document.getElementById('NotificationType');
                var ntype = parseInt(e.options[e.selectedIndex].value);
                //use Mhotivo/Data/Notification/NotificationType enum values
                switch (ntype) {
                    case 5:
                        $('#DestinationId').empty();
                        $.each($(data.AcademicCourses), function (i, optionavailable) {
                            $('#DestinationId').append("<option value='" + optionavailable.Value + "'>" + optionavailable.Text + "</option>");
                        });
                        break;
                    case 6:
                        $('#DestinationId').empty();
                        $.each($(data.Personals), function (i, optionavailable) {
                            $('#DestinationId').append("<option value='" + optionavailable.Value + "'>" + optionavailable.Text + "</option>");
                        });
                        break;
                    default:
                        break;
                }
            }
        });
    }
    $('#NotificationType').change(updateSelectLists);
    $('#Id1List').change(updateFromId1);
    $('#Id2List').change(updateFromId2);
</script>